--drop table T_EB_Payment;
CREATE TABLE T_EB_Payment(
  ID int PRIMARY KEY,
  BATCH_SEQ_ID VARCHAR2(32), --中间件批次流水号      
  SEQ_ID VARCHAR2(32),  --中间件流水号
  ACC_NO  VARCHAR2(30) not null,  --交易主账号
  ACC_NAME  NVARCHAR2(30),  --交易主账户名
  BANK_NAME  VARCHAR2(10),  --银行简码  
  PAY_TYPE  VARCHAR2(10),  --业务类别
  TRANS_DATE  DATE,  --预约交易日期
  AMOUNT  NUMBER(19,2),  --付款金额
  CUSTOMER_ACC_NO  VARCHAR2(30),  --客户账号
  CUSTOMER_ACC_NAME  NVARCHAR2(30),  --  客户账户名
  CUSTOMER_ACC_TYPE number(3),  --账户类型
  CUSTOMER_BANK_NAME  VARCHAR2(10),  --  客户银行简称
  CUSTOMER_BANK_FULL_NAME NVARCHAR2(30),  -- 客户银行全称
  CUSTOMER_BANK_BRANCH_NAME NVARCHAR2(50),  -- 客户银行开户行全称. 如招商银行深圳高新园支行
  CUSTOMER_AREACODE  VARCHAR2(4),  --客户账号开户地区
  CUSTOMER_CNAPS  VARCHAR2(15),  --  客户账号CNAP号
  CUSTOMER_CNAPS_BANKNO VARCHAR2(15),--网银支付行号(网银互联使用)
  LOCAL_FLAG number(3),  --汇路 '0'表示 同行本地. '1',表示表示 同行异地. '2','表示 小额. '3'表示  大额. '4',表示 上海同城. '5'表示 网银互联.
  SAME_BANK number(3),  --是否同行: 2 同行. 1 跨行 
  PAY_TRANS_CODE  VARCHAR2(20),  --  所使用的银行交易指令
  BANK_BATCH_SEQ_ID  VARCHAR2(20),  --  银行批次号
  BANK_SEQ_ID  VARCHAR2(20),  --  银行明细号
  CURRENCY  VARCHAR2(5),  --  交易币别
  USE_CODE  NVARCHAR2(15),  --  用途代码
  USE_DESC  NVARCHAR2(50),  --  用途描述
  REMARK  NVARCHAR2(100),  --  备注
  QUERY_TRANS_COUNT number(10) ,  --同步状态次数 
  STATUS  number(3),  --  交易状态
  STATUS_MSG NVARCHAR2(100),  -- 状态信息
  PAY_BANK_STATUS  NVARCHAR2(30),  --支付时银行返回状态
  PAY_BANK_STATUS_MSG  NVARCHAR2(100),  --支付时银行返回的状态信息
  PAY_ERROR_CODE number(5),--支付时返回的错误码(一般是银行校验不通过时返回)
  BANK_STATUS  NVARCHAR2(30), --银行返回状态
  BANK_STATUS_MSG  NVARCHAR2(100), --银行返回状态信息
  ERROR_CODE number(5), --错误码(如果查询过,则返回查询错误码)
  SUBMIT_PAY_TIME  TIMESTAMP(6),  --提交支付时间
  EXT_PROPERTIES NVARCHAR2(1000), --扩展字段(json格式串)
  CALLBACK_EXT_PROPERTIES NVARCHAR2(1000),--回调扩展字段
  CUSTOMER_CARD_TYPE NUMBER(3)， --用户卡类型
  APP_CODE NVARCHAR2(32),   --应用编号
  APP_TYPE NUMBER(3),       --应用类型
  PAY_MERCHANT_NO NVARCHAR2(64),--交易商户号
  MERCHANT_EXT_PROPERTIES VARCHAR2(1024),--交易商户扩展属性
  CREATE_TIME  TIMESTAMP(6),  --创建时间
  UPDATE_TIME  TIMESTAMP(6)  --更新时间 
)

PARTITION BY RANGE (TRANS_DATE) 
(
    PARTITION PARTITION201405 VALUES LESS THAN (to_date('2014-06-01','yyyy-mm-dd')),
    PARTITION PARTITION201406 VALUES LESS THAN (to_date('2014-07-01','yyyy-mm-dd')),
    PARTITION PARTITION201407 VALUES LESS THAN (to_date('2014-08-01','yyyy-mm-dd')),
    PARTITION PARTITION201408 VALUES LESS THAN (to_date('2014-09-01','yyyy-mm-dd')),
    PARTITION PARTITION201409 VALUES LESS THAN (to_date('2014-10-01','yyyy-mm-dd')),
    PARTITION PARTITION201410 VALUES LESS THAN (to_date('2014-11-01','yyyy-mm-dd')),
    PARTITION PARTITION201411 VALUES LESS THAN (to_date('2014-12-01','yyyy-mm-dd')),
    PARTITION PARTITION201412 VALUES LESS THAN (to_date('2015-01-01','yyyy-mm-dd')),
    PARTITION PARTITION201501 VALUES LESS THAN (to_date('2015-02-01','yyyy-mm-dd')),
    PARTITION PARTITION201502 VALUES LESS THAN (to_date('2015-03-01','yyyy-mm-dd')),
    PARTITION PARTITION201503 VALUES LESS THAN (to_date('2015-04-01','yyyy-mm-dd')),
    PARTITION PARTITION201504 VALUES LESS THAN (to_date('2015-05-01','yyyy-mm-dd')),
    PARTITION PARTITION201505 VALUES LESS THAN (to_date('2015-06-01','yyyy-mm-dd')),
    PARTITION PARTITION201506 VALUES LESS THAN (to_date('2015-07-01','yyyy-mm-dd')),
    PARTITION PARTITION201507 VALUES LESS THAN (to_date('2015-08-01','yyyy-mm-dd')),
    PARTITION PARTITION201508 VALUES LESS THAN (to_date('2015-09-01','yyyy-mm-dd')),
    PARTITION PARTITION201509 VALUES LESS THAN (to_date('2015-10-01','yyyy-mm-dd')),
	PARTITION PARTITION201510 VALUES LESS THAN (to_date('2015-11-01','yyyy-mm-dd')),
    PARTITION PARTITION201511 VALUES LESS THAN (to_date('2015-12-01','yyyy-mm-dd')),
    PARTITION PARTITION201512 VALUES LESS THAN (to_date('2016-01-01','yyyy-mm-dd'))
);
create INDEX IDX_BATCHSEQID on T_EB_Payment(BATCH_SEQ_ID);--批次号建个索引
CREATE SEQUENCE PAYMENT_ID_SEQ INCREMENT BY 1 START WITH 91 MAXVALUE 999999999999999999 NOCYCLE NOCACHE;

 